{"id":"Vj2w","dependencies":[{"name":"/Users/yuehanhuang/Coding/Collage-App/package.json","includedInParent":true,"mtime":1570737046371},{"name":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/package.json","includedInParent":true,"mtime":1570734043522},{"name":"./_baseClone","loc":{"line":1,"column":24},"parent":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/cloneDeep.js","resolved":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/_baseClone.js"}],"generated":{"js":"var e=require(\"./_baseClone\"),r=1,n=4;function o(o){return e(o,r|n)}module.exports=o;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/cloneDeep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":4,"column":0},"generated":{"line":1,"column":30}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":4,"column":0},"generated":{"line":1,"column":32}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":5,"column":0},"generated":{"line":1,"column":34}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":5,"column":0},"generated":{"line":1,"column":36}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":25,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":25,"column":0},"generated":{"line":1,"column":47}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":25,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":52}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":59}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":26,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":29,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":29,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules/lodash/cloneDeep.js","original":{"line":29,"column":0},"generated":{"line":1,"column":83}}],"sources":{"node_modules/lodash/cloneDeep.js":"var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n"},"lineCount":null}},"error":null,"hash":"653ca2b3a41079fd76ddcb5a610c37bf","cacheData":{"env":{}}}