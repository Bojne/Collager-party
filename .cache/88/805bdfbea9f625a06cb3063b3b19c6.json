{"id":"zuSO","dependencies":[{"name":"/Users/yuehanhuang/Coding/Collage-App/package.json","includedInParent":true,"mtime":1570737046371},{"name":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/package.json","includedInParent":true,"mtime":1570734043522},{"name":"./_baseMerge","loc":{"line":1,"column":24},"parent":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/merge.js","resolved":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/_baseMerge.js"},{"name":"./_createAssigner","loc":{"line":2,"column":29},"parent":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/merge.js","resolved":"/Users/yuehanhuang/Coding/Collage-App/node_modules/lodash/_createAssigner.js"}],"generated":{"js":"var e=require(\"./_baseMerge\"),r=require(\"./_createAssigner\"),i=r(function(r,i,s){e(r,i,s)});module.exports=i;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules/lodash/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/lodash/merge.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules/lodash/merge.js","original":{"line":2,"column":0},"generated":{"line":1,"column":30}},{"source":"node_modules/lodash/merge.js","original":{"line":2,"column":0},"generated":{"line":1,"column":32}},{"source":"node_modules/lodash/merge.js","original":{"line":2,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":74}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":76}},{"source":"node_modules/lodash/merge.js","original":{"line":35,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules/lodash/merge.js","original":{"line":36,"column":0},"generated":{"line":1,"column":81}},{"source":"node_modules/lodash/merge.js","original":{"line":36,"column":0},"generated":{"line":1,"column":83}},{"source":"node_modules/lodash/merge.js","original":{"line":36,"column":0},"generated":{"line":1,"column":85}},{"source":"node_modules/lodash/merge.js","original":{"line":36,"column":0},"generated":{"line":1,"column":87}},{"source":"node_modules/lodash/merge.js","original":{"line":39,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/lodash/merge.js","original":{"line":39,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/lodash/merge.js","original":{"line":39,"column":0},"generated":{"line":1,"column":107}}],"sources":{"node_modules/lodash/merge.js":"var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n"},"lineCount":null}},"error":null,"hash":"88a565c6149305e3dd67f1b321f448ca","cacheData":{"env":{}}}